uniform float4x4 ViewProj;
uniform texture2d image;
uniform float strongly;
uniform float gl_point2X;
uniform float gl_point2Y;
uniform float gl_point30X;
uniform float gl_point30Y;
uniform float gl_point53X;
uniform float gl_point53Y;
uniform float gl_lefteyeX;
uniform float gl_lefteyeY;
uniform float gl_righteyeX;
uniform float gl_righteyeY;
uniform float gl_width;
uniform float gl_height;
sampler_state def_sampler {
	Filter   = Linear;
	AddressU = Clamp;
	AddressV = Clamp;
};
struct VertInOut {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};
VertInOut VSDefault(VertInOut vert_in)
{
	VertInOut vert_out;
	vert_out.pos = mul(float4(vert_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = vert_in.uv;
	return vert_out;
}

float4 PSDrawBare(VertInOut vert_in) : TARGET
{
    float4 sorce = image.Sample(def_sampler,vert_in.uv);

    float2 coordinate =  vert_in.uv * float2(gl_width,gl_height);
    if(gl_lefteyeX == 0 || gl_lefteyeY==0 || gl_righteyeX ==0 || gl_righteyeY == 0){
        float4 sorce = image.Sample(def_sampler,vert_in.uv);
	    return sorce;
    }else{
        // float2 zuobiyi = float2(zuogl_point53X,gl_point53Y);
        // float2 youbiyi = float2(yougl_point53X,gl_point53Y);

        //float2 left = (float2(gl_point2X,gl_point2Y) + float2(gl_point53X,gl_point53Y))/2.0;
        //float2 right = (float2(gl_point30X,gl_point30Y) + float2(gl_point53X,gl_point53Y))/2.0;
        float2 left = float2(gl_point2X,gl_point2Y);
        float2 right = float2(gl_point30X,gl_point30Y);
        float eyeDistance = distance(float2(gl_lefteyeX,gl_lefteyeY), float2(gl_righteyeX,gl_righteyeY)); // 两个瞳孔的距离
        float r = eyeDistance*0.3;
        float dis1 = distance(left,coordinate);
        float dis2 = distance(right, coordinate);
        if(dis1<r || dis2<r){
            float rate=1.0;
            if(dis1<r){
                    rate=strongly*(1.0-dis1/r);
            }
            if(dis2<r){
                    rate=strongly*(1.0-dis2/r);
            }

            sorce.rgb=clamp(sorce.rgb+rate*float3(1.0,0.5,0.5),0.0,1.0);
        
        }

        return sorce;
    }
}
technique Draw
{
	pass
	{
		vertex_shader = VSDefault(vert_in);
		pixel_shader  = PSDrawBare(vert_in);
	}
}